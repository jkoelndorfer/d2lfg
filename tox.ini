[tox]
envlist =
    lint
    type_check
    docs
    coverage_erase
    py{38,39,310,311,312}
    coverage_report
requires =
    setuptools
    setuptools_scm
    wheel
skip_missing_interpreters = True

[testenv:lint]
skip_install = True
deps =
    ruff == 0.1.11
basepython = py38
commands =
    ruff --version
    ruff check --no-fix

[testenv:type_check]
skip_install = True
deps =
    mypy        == 1.8.0
    pytest-mypy >= 0.10.3
basepython = py38

# Don't have mypy report unused ignores. Pyright is used
# for day-to-day development, while mypy is used for code
# quality checks. mypy will not always produce an error
# where pyright does. Specifically, calling an abstract
# class method produces a pyright type error, but it
# does not trigger a mypy error when testing.
commands =
    mypy --version
    mypy --no-warn-unused-ignores --strict src/ tests/

[testenv:docs]
# sphinx imports d2lfg to get the library version in docs/source/conf.py.
usedevelop = True
allowlist_externals = /bin/sh
deps =
    -r requirements-test.txt
    sphinx >= 7.1, < 8
commands =
    sphinx-build --version
    /bin/sh -c "cd docs && mkdir -p source/_static source/_templates && sphinx-build -n -W -b html source/ _build/html"
    /bin/sh -c 'printf "docs path: file://%s\n" "$PWD/docs/_build/html/index.html"'

[testenv:coverage_erase]
skip_install = True
deps =
    -r {toxinidir}/requirements-test.txt
commands =
    coverage --version
    coverage erase

[testenv]
usedevelop = True
deps =
    -r {toxinidir}/requirements-test.txt
commands =
    pytest --version
    coverage run --append --source=src/d2lfg/ -m pytest {posargs} tests/

[testenv:coverage_report]
skip_install = True
deps =
    -r {toxinidir}/requirements-test.txt
commands =
    coverage --version
    coverage report --show-missing
